// Define grid 12 columns
$max: 12;
@for $i from 1 through $max {
    $equ: 100% / $i;
    .grid-col-#{$i} {
        width: $equ;
    }
}

// Define margin vs padding
$spaceamounts: (5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 75, 100); // Adjust this to include the pixel amounts you need.
$sides: (top, bottom, left, right); // Leave this variable alone

@each $space in $spaceamounts {
  @each $side in $sides {
    .mr-#{str-slice($side, 0, 1)}-#{$space} {
      margin-#{$side}: #{$space}px;
    }
  
    .pd-#{str-slice($side, 0, 1)}-#{$space} {
      padding-#{$side}: #{$space}px;
    }
  }
}

// Define button
.button {
    display: block;
}

$colormap: ( green:( background: #86c351, hover:#78b04a), blue: ( background: #00b3e0, hover:#0097be), red: ( background: #ff5817, hover:#da4912));
@each $color,
$map in $colormap {
    @each $prop,
    $val in $map {
        @if( $prop=='background') {
            .button.#{$color} {
                background: $val;
            }
        }
        @else {
            .button.#{$color}:hover {
                background: $val;
            }
        }
    }
}

////// Set a value
@mixin setBox($width, $height, $background) {
    width: $width;
    height: $height;
    background-color: $background;
}

// Cach 1
.content {
    @include setBox(100, 100, #333);
}

// Cach 2
$style1: 100%,
70px,
#333;
$style2: (background: #bada55, width: 100%, height: 100px);
.fogdog {
    @include setBox($style1...);
}

.badass {
    @include setBox($style2...);
}

// Define breakpoint
@mixin device-sm() {
    @media only screen and (min-width: 480px) {
        @content;
    }
}

.content2 {
    font-size: 15px;
    @include device-sm {
        font-size: 16px;
    }
}

// Define position
// Define radius
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

.box {
    @include border-radius(3px);
}

//// Define Font styles 
@mixin font-source-sans($size: false, $colour: false, $weight: false, $lh: false) {
    font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
    @if $size {
        font-size: $size;
    }
    @if $colour {
        color: $colour;
    }
    @if $weight {
        font-weight: $weight;
    }
    @if $lh {
        line-height: $lh;
    }
}

.boxcontent {
    @include font-source-sans(14, #666, 500, 1.4);
}

// Define placeholders
@mixin input-placeholder {
    &.placeholder {
        @content;
    }
    &:-moz-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    &:-ms-input-placeholder {
        @content;
    }
    &::-webkit-input-placeholder {
        @content;
    }
}

input,
textarea {
    @include input-placeholder {
        color: #000;
    }
}

// Media queries
$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

.site-header {
    padding: 2rem;
    font-size: 1.8rem;
    @include mq('tablet-wide') {
        padding-top: 4rem;
        font-size: 2.4rem;
    }
}

//// Z-index set imported before
@function z($name) {
    @if index($z-indexes, $name) {
        @return (length($z-indexes) - index($z-indexes, $name)) + 1;
    } @else {
        @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
        @return null;
    }
}
$z-indexes: (
    "outdated-browser",
    "modal",
    "site-header",
    "page-wrapper",
    "site-footer"
);

.site-header {
    z-index: z('modal');
}

/// Truncate
@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.contentBox{
    @include truncate(500);
}